<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>a b/og</title>
    <description></description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 05 Jul 2016 14:13:36 +0100</pubDate>
    <lastBuildDate>Tue, 05 Jul 2016 14:13:36 +0100</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Books I read in 2015</title>
        <description>
&lt;p&gt;I read a lot of this books. This year was no exception. Not including a few books which I gave away and can’t remember reading, and a few books that I read on my computer (mostly code books), here is my list of books I read this year, in alphabetical order by first author. I love talking about books; if you’ve read any of these, &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#114;&amp;#105;&amp;#099;&amp;#104;&amp;#097;&amp;#114;&amp;#100;&amp;#064;&amp;#098;&amp;#117;&amp;#114;&amp;#110;&amp;#116;&amp;#102;&amp;#101;&amp;#110;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;drop me a line&lt;/a&gt; and let’s chat! I’ve bolded the ones I found particularly good.&lt;/p&gt;

&lt;p&gt;The most influential books I read this year were: &lt;em&gt;My Struggle&lt;/em&gt; by Karl-Ove Knausgård, and &lt;em&gt;Of Walking in Ice&lt;/em&gt; by Werner Herzog. They’ve redefined what I thought was possible with writing.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Amanda Palmer - The Art of Asking&lt;/li&gt;
  &lt;li&gt;Amy Tan - World on Fire&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Andy Weir - The Martian&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Bill Waterson - Calvin and Hobbes&lt;/li&gt;
  &lt;li&gt;Bill Waterson - Scientific Progress Goes Boink!&lt;/li&gt;
  &lt;li&gt;Bill Waterson - Something Under the Bed is Drooling&lt;/li&gt;
  &lt;li&gt;Bill Waterson - Weirdos from Another Planet&lt;/li&gt;
  &lt;li&gt;Bill Waterson - Yukon Ho!&lt;/li&gt;
  &lt;li&gt;Brandon Sanderson - Mistborn&lt;/li&gt;
  &lt;li&gt;Brandon Sanderson - The Hero of Ages&lt;/li&gt;
  &lt;li&gt;Brandon Sanderson - The Well of Ascension&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Brandon Sanderson - The Way of Kings&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Brandon Sanderson - Words of Radiance&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;David Deida - The Way of the Superior Man&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;David Troupes - Parsimony&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;David Troupes - Renaming of the Birds&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;David Troupes - The Simple Men&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Democracy, A Very Short Introduction&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Donald Hall - Essays After Eighty&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Douglas Adams - The Hitchhikers Guide to the Galaxy&lt;/li&gt;
  &lt;li&gt;Elie Wiesel - Night&lt;/li&gt;
  &lt;li&gt;Elizabeth Speare - The Sign of the Beaver&lt;/li&gt;
  &lt;li&gt;Frank Herbert - Dune Messiah&lt;/li&gt;
  &lt;li&gt;Gary Snyder - The Back Country&lt;/li&gt;
  &lt;li&gt;Gary Snyder - This Present Moment&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gary Synder - Riprap &amp;amp; Cold Mountain Poems&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Gene Wolfe - A Cabin on the Coast&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Gene Wolfe - The Ziggurat&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Haruki Murakami - What I Talk About When I Talk About Running&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Hermann Hesse - Siddhartha&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;James C. Richards - Better is Better&lt;/li&gt;
  &lt;li&gt;James D. Watson - Avoid Boring People&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Josh Waitzkin - The Art of Learning&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;JRR Tolkien - The Book of Lost Tales 1&lt;/li&gt;
  &lt;li&gt;JRR Tolkien - The Book of Lost Tales 2&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;JRR Tolkien - The Fall of Arthur&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;JRR Tolkien - The Hobbit&lt;/li&gt;
  &lt;li&gt;JRR Tolkien - The Lord of the Rings&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Karl Ove Knausgård - My Struggle, vol. 1&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Karl Ove Knausgård - My Struggle, vol. 2&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Karuho Shiina - Kimi no todoke&lt;/li&gt;
  &lt;li&gt;Ken Follett - The Pillars of the Earth&lt;/li&gt;
  &lt;li&gt;Kenji Yoshino - A Thousand Times More Fair&lt;/li&gt;
  &lt;li&gt;Leo Babauta - Zen to Done&lt;/li&gt;
  &lt;li&gt;Leo Tolstoy - What Men Live By&lt;/li&gt;
  &lt;li&gt;Mark Salzman - Iron and Silk&lt;/li&gt;
  &lt;li&gt;Matthew Inman - How to Tell If Your Cat Is Plotting to Kill You&lt;/li&gt;
  &lt;li&gt;Neil Gaimain - American Gods&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Neil Gaiman - The Ocean at the End of the Lane&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Pablo Neruda - The Sea and the Bells&lt;/li&gt;
  &lt;li&gt;Pablo Neruda - Twenty Love Poems and a Song of Despair&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Patrick Rothfuss - The Name of the Wind&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Patrick Rothfuss - The Wise Man’s Fear&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Ray Bradbury - Fahrenheit 451&lt;/li&gt;
  &lt;li&gt;Raymond Fiest - Magician: Apprentice&lt;/li&gt;
  &lt;li&gt;Rebecca West - The Return of the Soldier&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Robert Pirsig - Zen and the Art of Motorcycle Maintenance&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Robin Hobb - Assassin’s Apprentice&lt;/li&gt;
  &lt;li&gt;Robin Hobb - Assassin’s Quest&lt;/li&gt;
  &lt;li&gt;Robin Hobb - Royal Assassin&lt;/li&gt;
  &lt;li&gt;Robin Sloan - Mr Penumbras 24 Hour Bookshop&lt;/li&gt;
  &lt;li&gt;Ryan North - Poor Yorick&lt;/li&gt;
  &lt;li&gt;Ryan North - To Be or Not To Be&lt;/li&gt;
  &lt;li&gt;Seth Grahame-Smith - Abraham Lincoln: Vampire Hunter&lt;/li&gt;
  &lt;li&gt;Seth Grahame-Smith - Pride, Prejudice, and Zombies&lt;/li&gt;
  &lt;li&gt;Terry Pratchett - Making Money&lt;/li&gt;
  &lt;li&gt;Thomas Aquinas - On Being and Essence&lt;/li&gt;
  &lt;li&gt;To-ru Zekuu - Shiki Tsukai&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Ursula le Guin - Searoad&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;Various - As You Were, Punx Comics&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Walter Isaacson - Benjamin Franklin&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Werner Herzog - Of Walking in Ice&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;WB Yeats - The Tower&lt;/li&gt;
  &lt;li&gt;William Carlos Williams - Selected Poems&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 29 Dec 2015 00:00:00 +0000</pubDate>
        <link>/2015-12-29/books-i-read-in-2015</link>
        <guid isPermaLink="true">/2015-12-29/books-i-read-in-2015</guid>
        
        <category>list</category>
        
        
        <category>journal</category>
        
      </item>
    
      <item>
        <title>The user has sobered up</title>
        <description>
&lt;p&gt;&lt;img src=&quot;/assets/img/tuid-cover.png&quot; alt=&quot;Cover&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Roughly six months ago, I had a fun idea for a website that I fully expected would be a joke, that I would share with a few of my friends, and that would promptly be forgotten by the Internet. I had just joined &lt;a href=&quot;http://hackerparadise.org/&quot;&gt;Hacker Paradise&lt;/a&gt; in Bali. I needed a project for a hackathon during my first week there, so I decided to build out my idea. I made a basic website, didn’t think too much about the style or the wording, and launched it that afternoon.&lt;/p&gt;

&lt;p&gt;The idea was simple: I would get drunk, and review your website in the process. I would look for bugs, dark UX patterns, poor copy, and evaluate the site as a whole. The domain name said it all: &lt;a href=&quot;http://theuserisdrunk.com/&quot;&gt;TheUserIsDrunk.com&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;The site went wildly viral. Within an hour, I was at the top of Hacker News. I had just under 100,000 hits on the first day. Within a week, I had around 300k hits. I was interviewed by &lt;a href=&quot;https://www.fastcodesign.com/3044455/reviewing-ux-designs-while-drunk-makes-way-more-sense-than-you-think&quot;&gt;FastCo&lt;/a&gt;, &lt;a href=&quot;http://tech.co/heres-why-its-important-to-design-like-the-user-is-drunk-2015-03&quot;&gt;Tech.co&lt;/a&gt;, &lt;a href=&quot;http://gizmodo.com/i-paid-a-ux-expert-100-to-get-drunk-and-evaluate-gizmo-1693902126&quot;&gt;Gizmodo&lt;/a&gt;, &lt;a href=&quot;https://vwo.com/blog/drunk-review-worlds-easiest-ab-testing-tool/&quot;&gt;VWO&lt;/a&gt;, &lt;a href=&quot;https://blog.hubspot.com/marketing/hubspot-website-review-userisdrunk&quot;&gt;Hubspot&lt;/a&gt;. And, almost immediately, the orders started coming in. I raised my price from $50 to $500, sure that at some point, people would stop buying. They didn’t.&lt;/p&gt;

&lt;p&gt;Today, I am announcing that I am closing it to open orders.&lt;/p&gt;

&lt;p&gt;In this post, I’d like to share my process and my favorite parts of the entire experience; what drinking professionally is like; serious questions I have about privilege; why I feel it is time for me to close the site; and what’s next.&lt;/p&gt;

&lt;h2 id=&quot;evaluating-ux-while-drunk&quot;&gt;Evaluating UX While Drunk&lt;/h2&gt;

&lt;p&gt;The User Is Drunk provided a service that wasn’t actually as straightforward as it seems. I wasn’t really a “user”, a naïve person you’d pay on fiverr.com or a friend you’d ask to check out your beta site. I’m a full-stack developer with experience evaluating UX/UI for websites, mostly ones I was building as part of teams in New York and San Francisco. The site could easily have been marketed as “The independent UX reviewer is drunk,” with the following line saying: “I’ll get drunk and give you advice that I could have given you sober about your UX, pretending I am a normal user, but I’ll mess some stuff up.” The service could have also been touted as “Richard will get drunk and try to have as good a time as possible while straddling the line between comedian commentator and astute observer.”&lt;/p&gt;

&lt;p&gt;Just to be clear, “The User Is Drunk” wasn’t an entirely novel idea. There was another guy who had come up with the same idea before: &lt;a href=&quot;http://willdayble.com/&quot;&gt;Will Dayble&lt;/a&gt;. I had doubtlessly heard of the phrase from him, although I didn’t know the provenance of the idea at the time and thought it was just a standard idea used in the industry. That probably says more about my absentmindedness than about the state of UX as an evolving discipline. There’s a few reasons why drunk users are interesting, from a UX perspective. I could list them all here, but Austin Knight of Hubspot wrote an &lt;a href=&quot;http://austinknight.com/writing/ux-insights-from-a-drunk-guy/&quot;&gt;absolutely fantastic article&lt;/a&gt; about drunk user testing, based on my service, that says it much more eloquently than I ever could.&lt;/p&gt;

&lt;p&gt;My process reviewing sites went something like this. I would have a few drinks, always with friends. At some point during the evening, I would wander away for twenty minutes and launch up my computer. I would generally spend around ten minutes on a site — sometimes, I spent as long as twenty minutes, sometimes as short as five. I used a Trello board to organize everything. I used &lt;a href=&quot;https://www.screenmailer.com/&quot;&gt;ScreenMailer&lt;/a&gt; to take videos, although for some special instances I used QuickTime to record mobile reviews. Afterwards, I would give the video to a writer friend of mine, &lt;a href=&quot;http://davidfolgeryoung.com/&quot;&gt;David Young&lt;/a&gt;, who would type up my rants in a nicely formatted PDF (originally designed by &lt;a href=&quot;https://medium.com/u/5da5f67aece&quot;&gt;Simon&lt;/a&gt;) that I would then send to the customer. David was an absolute champ, and every dollar I spent on his copy editing was 100% worth it. He’s listened to hours of me talking incoherently, and somehow made sense of it. &lt;/p&gt;

&lt;p&gt;In the end, what I would send to the client was a PDF with a list of things I had noticed in the site — bugs, dark patterns, bad copy, etc. — and a list of things that they could instantly do to improve their site. I also attached a screenshot of the video and a link to the video of me going over their site. If they liked it and said yes, I would put a link to their video on my website. At the moment, there are 36 videos up. I probably reviewed somewhere around 50 different sites, all told. &lt;/p&gt;

&lt;p&gt;The actual videos were the main deliverable. Sometimes, they were really useful to the client. I identified bugs, found parts of their website they didn’t know existed, and pointed out where copy could be better. I got great feedback, and occasionally I would get repeated clients. Sometimes, the videos were useful for other reasons — for instance, they wanted exposure. I’m fairly certain Mathbreakers.com had no idea how much traffic they would get from my site as my first client (tons). For a lot of buyers, the entire point was just to see what I would make of their site, because they thought I was a pretty funny guy when I was drunk. And, sometimes, my reviews were completely useless to everyone involved. I’ll talk more about that later. &lt;/p&gt;

&lt;h2 id=&quot;what-drinking-professionally&quot;&gt;What Drinking Professionally&lt;/h2&gt;

&lt;p&gt;Means Living in Bali and Thailand, getting drunk wasn’t expensive, difficult, or out of the ordinary. I was traveling with 30~ friends, and on any given night some of them were up for hanging out. Many even seemed to enjoy watching me go away for ten minutes in the middle of a beer to record myself stumbling my way through someone’s website. I made a deal with my friends, as I didn’t want to drink alone: if I was reviewing a site, I would buy everyone drinks. All that I asked of them was that they, you know, hang out with me. Most of them thought this was hilarious, and were more than happy to oblige. There was always someone up for a drink. &lt;/p&gt;

&lt;p&gt;When I first posted the site on Hacker News, one comment, quickly upvoted, was this: &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Alcoholism is sad. :(&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The comment was later deleted after a barrage of HN commenters stated this wasn’t alcoholism, let the kid have a good time (something I’m not sure I agree with). I wish the commenter had left it up. Although it may seem strange, it was this comment that, for the first time, made me take a step back and think honestly about what I was doing. Remember, I hadn’t thought that the idea would go viral, at all. I did it as a joke. Now, all of the sudden, I was &lt;em&gt;contractually&lt;/em&gt; obliged to drink. And I was known for it. &lt;/p&gt;

&lt;p&gt;I quickly did a few things. First, I added a huge disclaimer to the website. Then, I made it clear that I would be responsible about drinking times, and I gave no assurances to any customers that I would do their reviews by X date. A few people did email me asking when their review was coming; in those cases, I would generally just move them up in the queue. This took a lot of pressure off of me to drink. Still, for the first month or so, I was essentially drinking every few days. I would suggest that absolutely no one do this, for any reason. &lt;/p&gt;

&lt;p&gt;I’m naturally a lightweight. At the beginning of this venture, I would get drunk on two beers. I’m not even joking. My friends suggested at times that I just pretend I was drunk. I never did, because it didn’t take much for me to become inebriated and stay that way, and because it felt disingenuous. I had routines to ensure that I was still at peak performance the next day, because I hate hangovers and I like working. My main routine involved big breakfasts of greasy, non-sugary Indonesian food, lots of coffee, and long distance running. If you ever suspect you may be hung-over the next day, I highly suggest running five miles before dawn on only a few hours sleep. You’ll sweat out the alcohol, stay fit, and the pain of the first few miles will rapidly give way to a fantastic, natural endorphin high. Make sure you stay hydrated. &lt;/p&gt;

&lt;p&gt;(I don’t want to get too sidetracked, but running is the best. I can’t possibly explain how beautiful it is to run through Indonesian rice paddies in tropical heat, or on Thai beaches before dawn with shrimp boats and lightning storms on the horizon and ghost crabs flirting with the waves next to you. Drinking is pathetic in comparison, but running doesn’t pay my bills.)&lt;/p&gt;

&lt;p&gt;After a couple of months, my tolerance level rose through the roof, and my routines were less effective. I dealt with this by only “working” once a week, if that, and I stopped drinking casually. Luckily, my price level was high enough that by this point I was mostly out of clients. &lt;/p&gt;

&lt;p&gt;In July, I moved to Boston. This was my first time living in my native New England in ten years, and my social group was radically different — mostly, I was hanging out with my cousins, not digital nomads. Since I was spending more time with my family, this also meant I was much less likely to get drunk often. Pretty soon, I found that I had difficulties finding anyone who wanted to have a few drinks on any given night, which meant I had to plan events as far as a few weeks away. This was a lot better for me physically, but made the entire thing much less of a side project and much more of a job. &lt;/p&gt;

&lt;p&gt;If drinking is your job,  you swiftly realize how miserable drinking is. For one: alcohol is a depressant, and always trying to stay in a good mood is tiring. Sometimes my comments on people’s websites weren’t intellectually useful or comedic, often because I wasn’t in a good place that night. On one occasion, I think I sang for a couple of minutes in the middle of the review. I’m not proud of that. &lt;/p&gt;

&lt;p&gt;Alcohol is also expensive, in terms of both time and money. For me, this was especially pertinent. Sometimes I would review the wrong site, and I had to do a site over. Most of the time, my clients thought this was hilarious, especially after I sent an email saying that was part of the problem of streamlining my process. How do you make a drunk person more efficient, anyway? Sometimes they didn’t find it all that funny — I was, after all, paid to provide a valuable service. The amount of time I spent on a site also varied, as it depended upon my ability to find things to comment on — this wasn’t always easy — and how tired and / or bored I was. If I could stand here and honestly tell you that I found a way to standardize how drunk I was or what mood I was in, I’d be either a liar or not a human (approach with caution). I didn’t. That’s part of what drinking means. &lt;/p&gt;

&lt;p&gt;Alcohol obscures judgment. Sometimes my comments were idiotic. Sometimes I think I was downright mean as a reviewer. I’ve since dedicated a lot of time towards reading articles and learning how to give constructive and not destructive criticism. This is very hard, and I hope I’ve gotten better at it. Alcohol can also, besides obvious liver damage, lead to dangerous situations. Thankfully, I don’t think anyone was ever physically hurt by The User (as my friends called me sometimes), but there were a few bicycle rides I probably wouldn’t do again if asked. &lt;/p&gt;

&lt;h2 id=&quot;checking-my-privilege&quot;&gt;Checking My Privilege&lt;/h2&gt;

&lt;p&gt;One of the things I noticed early on when tweeting about The User Is Drunk was that very few of my good friends were interested, and very few members of the Javascript community I consider myself a part of talked to me about it. Instead, there was this big area of silence. Initially, I figured this was because The User wasn’t dealing with javascript, node, or similar coding things. A good deal of thought later, I realized I was guilty of something else: flaunting my privilege. Very few people called me out on it; I wish more people had. &lt;/p&gt;

&lt;p&gt;Imagine if I weren’t a white heterosexual-looking cis-male. Would The User Is Drunk have gotten anywhere near the amount of press it got if I were an African-American man? If I were a woman? What if I was both? What if I was from Indonesia, like the majority of people I saw daily when this started, and not an educated, upper-middle-class kid from Connecticut? &lt;/p&gt;

&lt;p&gt;These sentences are questions because I don’t have answers to them. I do know that I  would not have gotten the same amount of press, at all, if I was a member of a minority; if it had, I think the comment sections would have been filled with slander and ignorant statements. We’ve all seen these, so I don’t need to give you some potential examples here. My being a white dude made it that much easier for people to share and laugh about my website. &lt;/p&gt;

&lt;p&gt;As the months went on, I found myself asking more questions. For instance, what if it was more obvious that I am not heterosexual, but openly queer? Does my sexuality even matter here? Does the fact that I founded this while backpacking around Southeast Asia flaunt how mobile and independent I am, and how I am a product of a capitalist, warmongering, and colonial empire (looking at you, America)? Am I complicit in that legacy?&lt;/p&gt;

&lt;p&gt;The worst question, that came soon and which I mentioned above, was this one: what if I was actually an alcoholic? I started to wonder if I was being ableist by doing something that many people cannot — drinking excessively. &lt;/p&gt;

&lt;p&gt;I am one of those strange kids who remembers the first time I had a drink. It was at 3:33pm on my birthday, 18 years exactly since I was born, because I wanted to only drink when it was legal to do so. I had a Guiness, hated it, got drunk for the first time that night, and hated that too. I can count the amount of times I got drunk my first year of university (7), I think largely because drinking had a huge stigma for me because of how sheltered I was raised.&lt;/p&gt;

&lt;p&gt;(Note: I do not think that I am an alcoholic, and I am more than happy to sit down and talk seriously with you about this if you feel I need to. Please get in touch. I’m listening.)&lt;/p&gt;

&lt;p&gt;Raising these questions amongst my friends, many of them tell me that I am “being too hard on myself”, or “thinking too much.” But by not answering these questions on my website, by not drawing attention to them, I was enforcing the status quo of “It’s OK to drink and laugh about drinking, as long as you’re a white bro.” I also bought into drinking culture, and in particular, drinking tech culture, as a thing that is OK. &lt;/p&gt;

&lt;p&gt;It is &lt;em&gt;not&lt;/em&gt; ok. Being able to enjoy alcohol with your coworkers or community isn’t a given, it’s a privilege, and not everyone is afforded it, subscribes to it, likes it, or has the option. I know people who didn’t mesh well with a team because they didn’t drink, and I know people who felt excluded at tech conferences because they didn’t drink. I know young people who can’t enjoy conferences because there’s alcohol there.&lt;/p&gt;

&lt;p&gt;I know people who struggle with drinking. Alcoholism is real, and it is ugly, pernicious, and brutal.&lt;/p&gt;

&lt;p&gt;I tried to sideline my privilege. I added a few lines to my website. I told myself, “Sure — but you are, in fact, a healthy, able, twenty-six year old tech male who can do this. So why don’t you? Have some fun. Live your life. Recognize who you are, but don’t apologize for it.”&lt;/p&gt;

&lt;p&gt;I’m still debating whether that was the right thing to do. I have friends who are firmly in the “No, it wasn’t OK” category, and friends who definitively aren’t. Disagreements make us human.&lt;/p&gt;

&lt;p&gt;I’m raising these questions here because I think they are important to talk about, to mention, not because I have answers, and not because I feel like raising these questions alone will absolve me of any guilt or damage I may have caused. The only thing I can do is recognize my privilege and check it. I dropped that ball in some ways here. I wish I was alone in this. I’m not. As a culture, tech is extraordinarily bad at not dropping that ball. The only thing we can do to get better, as a culture, is to recognize and check our privileges. &lt;/p&gt;

&lt;p&gt;Some of you might know that I launched &lt;a href=&quot;http://theuserismymom.com/&quot;&gt;TheUserIsMyMom.com&lt;/a&gt; shortly afterwards, with my friend Scotty Allen and his mom, Pam. While not a great commercial success, The User Is My Mom also got significant amounts of traffic, and was seen on Motherboard, Wired, and CNBC. There are very similar questions we could raise about whether it is ableist or sexist. In both cases, I personally would emphatically say no, because Pam wanted to do it herself, and that’s her choice. But the way we phrased it might have been better, and I’m not sure that riding on the controversy wave, as I certainly did, is the best move. &lt;/p&gt;

&lt;h2 id=&quot;the-best-parts&quot;&gt;The Best Parts&lt;/h2&gt;

&lt;p&gt;The last few minutes of reading have probably not been fun reading (they weren’t fun to write). I don’t want to give the wrong impression about it was like doing The User Is Drunk, on a daily level. For the most part, it was a very enjoyable experience. I had a great time. &lt;/p&gt;

&lt;p&gt;One of the coolest bits was that I would meet people, someone would bring up TheUserIsDrunk.com, and I’d hear a lot of “Oh, that was you!?” This happens pretty regularly, and is, in a “yeah, that was me, no big deal” kind of way, pretty damn satisfying. I’d also see references around the web now and then, like this quote at the top of Designer News:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/dn-news.jpeg&quot; alt=&quot;DN News&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My favorite review I did, hands down, was &lt;a href=&quot;http://jeffreypicard.com&quot;&gt;jeffreypicard.com&lt;/a&gt;. Jeff is my favorite person. His website had no CSS, and he paid because he wanted to see what I would do. I laughed so hard. &lt;a href=&quot;https://www.screenmailer.com/v/sXyhHiYTcauAQqI&quot;&gt;Here is my review&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Some other notable highlights include &lt;a href=&quot;https://www.screenmailer.com/v/aqUEFaIwIjbFGME&quot;&gt;my review&lt;/a&gt; for meh.com, where I bought a dog toy for a dog I don’t have; &lt;a href=&quot;https://www.screenmailer.com/v/MacCNd8UnNtlqx4&quot;&gt;my review&lt;/a&gt; of weeklyfilet.com, where I liked the product so much that I mentioned that David Bauer and I should be friends (we since are on Facebook and Twitter, much to my amusement); and my review of &lt;a href=&quot;https://www.screenmailer.com/v/tmtT6Yyf7UagZ7w&quot;&gt;drsquatch.com&lt;/a&gt;, which was memorable mainly because their site is great, and because their product is great. They sent me some soap that smells absolutely amazing — like, seriously, stop what you’re doing and go buy their soap. &lt;/p&gt;

&lt;p&gt;I also had an absolutely great time with BREWPUBLIK, my sponsors. BREWPUBLIK is an awesome company in North Carolina that delivers hand-picked brews to your door. I went down and visited them a bit ago, and they’re a great team and they work so hard. I really can’t praise them enough (they’re not paying me to say this here, either). &lt;/p&gt;

&lt;h2 id=&quot;why-i-am-closing-it&quot;&gt;Why I Am Closing It&lt;/h2&gt;

&lt;p&gt;I covered most of the reasons I am shutting down The User Is Drunk above, but I wanted to recap a few of them here. &lt;/p&gt;

&lt;p&gt;It’s not that it isn’t profitable, or can’t be made profitable, or that it can’t scale. I’ve thought about all of these things, and there’s definitely a sustainable business model to be made out of drunk reviews. The User Is Drunk also helped me get out of immediate credit card debt, something I am incredibly happy about, and for the first time in my life, I have savings. That’s really cool. So, finances and declining demand for drunk reviews isn’t why I am writing this post. &lt;/p&gt;

&lt;p&gt;Mainly, I don’t want to drink professionally any more. I’m not in the same community I was in when I started, and I don’t like asking my friends to drink with me while I have financial benefit in mind. Call me crazy, and several of my friends have (especially those who say, “Just split the profits with us. We’re cool with that.” Of course you are, you nincompoops.)&lt;/p&gt;

&lt;p&gt;I also would like to be able to say that I gave value to every single person I worked with. I don’t think this is true, and I don’t think it would be true going forward. I don’t want to just give people a product — I want to make everyone I know be AWESOME. All of the time. That’s what I want to be like as a person. The User Is Drunk was a fun experiment, but I don’t think it was an entirely successful one; there were times I let clients down, times that I never got a return email after sending the video, and some bridges I feel I may have burned. I hate burning bridges, and I hate letting people down in any way. Since I can’t standardize how I drink and how much value I give to people while drunk, I am going to try my hand at something else. &lt;/p&gt;

&lt;h2 id=&quot;whats-next&quot;&gt;What’s Next&lt;/h2&gt;

&lt;p&gt;Now that I no longer do drunk reviews regularly, as of writing this post, I am going to try and focus on giving better sober ones. If you need any UX/UI appraisals, do let me know. I’m available for hire. &lt;/p&gt;

&lt;p&gt;You may have noticed, above, that I said “regularly” and “closing it to open orders”. What this means is that if you &lt;em&gt;really&lt;/em&gt; want to have a drunk Richard video —email me. I won’t do sites for any paying customer anymore, but if I like your site, and I think I can honestly help you out and help make your website AWESOME — well, maybe I’ll see if I can give you some comments after the occasional night out. This should help me quality control both my life and my product better, which will make me — and you — happier. &lt;/p&gt;

&lt;p&gt;For now, I am going to focus more on open-source projects. I’m still working on &lt;a href=&quot;https://github.com/BeagleLab/beagle/&quot;&gt;Beagle&lt;/a&gt;, a Chrome extension PDF and HTML annotator I’ve been building with the MIT Media Lab to help make science better. I also want to work more on &lt;a href=&quot;https://ipfs.io/&quot;&gt;IPFS.io&lt;/a&gt;, the distributed web that I think may seriously change how we use the Internet. &lt;/p&gt;

&lt;p&gt;I also want to write better fantasy literature, climb bigger mountains, see more art, run a marathon, volunteer to help more people, and enjoy both what a late night with a book feels like, and what the early morning looks like with a clear mind. If you’re interested in following me on this journey, and learning about what projects I have and what I’m thinking about — I’ve got a new tiny letter here: &lt;a href=&quot;https://tinyletter.com/richlitt&quot;&gt;https://tinyletter.com/richlitt&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Here’s to the future. Cheers!&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Nov 2015 00:00:00 +0000</pubDate>
        <link>/2015-11-29/the-user-has-sobered-up</link>
        <guid isPermaLink="true">/2015-11-29/the-user-has-sobered-up</guid>
        
        <category>drink</category>
        
        <category>projects</category>
        
        <category>blog</category>
        
        
        <category>thoughts</category>
        
      </item>
    
      <item>
        <title>How to amend a commit on a GitHub Pull Request</title>
        <description>
&lt;h2 id=&quot;so-you-need-to-change-your-commit&quot;&gt;So you need to change your commit&lt;/h2&gt;

&lt;p&gt;Here are your options:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add another commit on this branch and then push to this branch.&lt;/li&gt;
  &lt;li&gt;Manually fix your changes, amend, and force push.&lt;/li&gt;
  &lt;li&gt;Add another commit, and then squash commits.&lt;/li&gt;
  &lt;li&gt;Interactively checkout the previous commit, remove lines that aren’t wanted, stage, amend, and force push.&lt;/li&gt;
  &lt;li&gt;Interactively rebase.&lt;/li&gt;
  &lt;li&gt;Close this PR, commit again on a new branch, open another PR.&lt;/li&gt;
  &lt;li&gt;Wait for someone else to do this for you, and then have them credit you.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure you’re on your branch, and currently pointing to the commit that was used to make this PR.&lt;/p&gt;

&lt;h3 id=&quot;option-1-add-another-commit-and-push-to-your-pr-branch&quot;&gt;Option 1: Add another commit and push to your PR branch&lt;/h3&gt;

&lt;p&gt;This is normally the thing to do.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo &#39;these are some edits&#39; &amp;gt;&amp;gt; your_file.md  
$ git commit -m &#39;Edits are the best&#39;  
$ git push origin HEAD  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this does is provide you with a very clear history of what was committed where, and anyone can see this in the PR and in the future history of the project if it is merged in.&lt;/p&gt;

&lt;p&gt;However, for things like spelling edits, line removals, or general small nitpicky things that the maintainers want you to do, having an extra commit may not be the best option. Some repositories like to have a very clear history, where each commit shows something meaningful that happened. A second commit removing a space, added by accident in the previous commit, isn’t really useful for anyone.&lt;/p&gt;

&lt;p&gt;(On a side note: &lt;code class=&quot;highlighter-rouge&quot;&gt;git push&lt;/code&gt; is enough if you’re on newer git versions and the remote matches local. &lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin HEAD&lt;/code&gt; is just longhand for pushing to whatever branch you’re currently on. If you’re using a different naming scheme for &lt;code class=&quot;highlighter-rouge&quot;&gt;origin&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;upstream&lt;/code&gt;, you will need to update that accordingly, of course.)&lt;/p&gt;

&lt;h3 id=&quot;option-2-manually-add-changes-amend-and-force-push&quot;&gt;Option 2: Manually add changes, amend, and force push&lt;/h3&gt;

&lt;p&gt;This is where force pushing comes in. While most git guides tell you that “Force pushing is the worst thing in the world, and it makes you a Sith Lord if you use them, and we will find you and hunt you down”, really, it makes sense in situations where a commit on a non-merged PR should be changed. No one is going to be touching that PR, so you don’t have to worry about dirtying past history. The only person likely to be touching that branch will be you.&lt;/p&gt;

&lt;p&gt;A lot of people complain that then the comments made by the maintainers will be lost. Technically, they are saved on GitHub in outdated diffs, if anyone wants to see them, although they won’t be in the git history itself (which makes them less accessible and useful). But, more relevantly, they often aren’t that important. Is it important that a maintainer told you to remove a trailing space? I don’t think so. Most maintainers I know would agree with me.&lt;/p&gt;

&lt;p&gt;So, you can manually change your file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vi your_file.md  
# Do the edits you need to, here, and then type `:wq`.  
# There&#39;s no reason you can&#39;t use your usual editor to edit the file.  
$ git add -A  
$ git commit --amend  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You see that we added the edits to git’s staging area, with &lt;code class=&quot;highlighter-rouge&quot;&gt;git add -A&lt;/code&gt;. (If you ever want to know what a git command flag means, type the equivalent of &lt;code class=&quot;highlighter-rouge&quot;&gt;man git-add&lt;/code&gt;. The git manuals aren’t really all that bad.) Then, we typed &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit --amend&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;--amend&lt;/code&gt; is your friend - it lets you change a commit by adding to it, editing the commit message, or even doing things like changing who made the commit and when it was committed. This only changes things locally, which means you have to be careful about pushing elsewhere or expecting anyone else to have your changes. But don’t worry - git will warn you if you try to run &lt;code class=&quot;highlighter-rouge&quot;&gt;git push origin HEAD&lt;/code&gt; at any point, as it knows that the commit has been changed, and you should know what you’re doing before pushing.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;--amend&lt;/code&gt; opens up the interactive commit message environment you are used to from &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit&lt;/code&gt;. Change the message as you see fit; you’ll see your edits are now actually part of the commit, too. When you save (&lt;code class=&quot;highlighter-rouge&quot;&gt;:wq&lt;/code&gt; again), it will register that a new commit has been logged.&lt;/p&gt;

&lt;p&gt;Now comes the part you normally shouldn’t do, but since the maintainers have asked you, and since you know it is to your own branch, and since you’re not too worried about being a Sith lord: &lt;code class=&quot;highlighter-rouge&quot;&gt;git push -f origin HEAD&lt;/code&gt;. This will tell git to not care that this is a different commit. Git will overwrite the remote commit with your commit, and now you’ll see that the PR has also automatically been updated on GitHub. The old comments telling you to change stuff are now in an outdated diff, the code shows the most recent version, and you’re ready to merge. Everyone wins.&lt;/p&gt;

&lt;h3 id=&quot;option-3-committing-and-squashing&quot;&gt;Option 3: Committing and squashing&lt;/h3&gt;

&lt;p&gt;Another option you can do, which is a bit more standard and which you may be used to, is to edit your file, and then make a new commit. You can even make as many commits as you like, really. However - like we said earlier, some maintainers want a clean history. You can clean up your history by squashing commits, and then force pushing.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ echo &#39;1&#39; &amp;gt;&amp;gt; your_file.md  
$ git add -A &amp;amp;&amp;amp; git commit -m &#39;init&#39;  
$ echo &#39;2&#39; &amp;gt;&amp;gt; your_file.md  
$ git add -A &amp;amp;&amp;amp; git commit -m &#39;1&#39;  
$ echo &#39;3&#39; &amp;gt;&amp;gt; your_file.md  
$ git add -A &amp;amp;&amp;amp; git commit -m &#39;2&#39;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What you’ve just done here is made three commits, with three changes. But say you only want the initial commit to be logged, but you want all of the changes in the subsequent two? So, you want one commit for this final file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cat your_file.md  
1  
2  
3  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is easy. What you need to do is to find the SHA for the commit you want. Type &lt;code class=&quot;highlighter-rouge&quot;&gt;git log&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git log  
commit a64e0ba789c7d6a38190a87cf073de83f9e74e65  
Author: Richard Littauer &amp;lt;richard.littauer@gmail.com&amp;gt;  
Date:   Fri Oct 30 13:01:26 2015 -0400  
  
    2  
  
commit b55c3647991830ba50c12b3755ab00c8c537caab    
Author: Richard Littauer &amp;lt;richard.littauer@gmail.com&amp;gt;  
Date:   Fri Oct 30 13:01:24 2015 -0400  
  
    1  
  
commit 7bedf0d423deb3e7e81fc3ba980a92252b684a83  
Author: Richard Littauer &amp;lt;richard.littauer@gmail.com&amp;gt;  
Date:   Fri Oct 30 13:01:24 2015 -0400  
  
    init  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Copy the final commit SHA. As with all git SHAs, you can actually just copy the first 6 letters. Then, type this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git squash 7bedf0  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this will do is squash your commits down to the commit &lt;code class=&quot;highlighter-rouge&quot;&gt;7bedf0&lt;/code&gt;, but keep all of the subsequent changes (in the staging area). Let’s take a look:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git log  
commit 7bedf0d423deb3e7e81fc3ba980a92252b684a83  
Author: Richard Littauer &amp;lt;richard.littauer@gmail.com&amp;gt;  
Date:   Fri Oct 30 13:01:24 2015 -0400  
  
    init  
$ cat your_file.md   
1  
2  
3  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Sweet! You now have one commit, but &lt;code class=&quot;highlighter-rouge&quot;&gt;your_file.md&lt;/code&gt; looks like you want it to. However, if we run &lt;code class=&quot;highlighter-rouge&quot;&gt;git diff --cached&lt;/code&gt;, we can see the staged edits:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git diff --cached  
diff --git a/your_file.md b/your_file.md  
index d00491f..01e79c3 100644  
--- a/your_file.md  
+++ b/your_file.md  
@@ -1 +1,3 @@  
 1  
+2  
+3  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Looks like the changes in the second two commits are staged, but not committed. Well, now we just do &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit --amend&lt;/code&gt;, save, and then force push. Easy as pie.&lt;/p&gt;

&lt;p&gt;But what if you don’t want to edit your file manually, like we did in &lt;code class=&quot;highlighter-rouge&quot;&gt;vi your_file.md&lt;/code&gt;? Say there are a lot of small changes you have to make, or it’s just tedious work.&lt;/p&gt;

&lt;h3 id=&quot;option-4-interactively-checkout-and-amend&quot;&gt;Option 4: Interactively checkout and amend&lt;/h3&gt;

&lt;p&gt;Well, here you can do some cool stuff.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -p HEAD~1  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What this does is to compare your current commit (your &lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD&lt;/code&gt;) to your last commit (&lt;code class=&quot;highlighter-rouge&quot;&gt;HEAD~1&lt;/code&gt;). It diffs the two commits, and adds the previous commits lines which are different, removing lines from your current commit. This is like applying the inverse of your current commit. &lt;code class=&quot;highlighter-rouge&quot;&gt;-p&lt;/code&gt; means patch, and it interactively selects hunks from the diff. This is useful, because it means you can choose which lines you want to keep, and which you don’t.&lt;/p&gt;

&lt;p&gt;When you type &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -p HEAD~1&lt;/code&gt;, it will give you an option for each hunk in the file. This looks like this: &lt;code class=&quot;highlighter-rouge&quot;&gt;Apply this hunk to index and worktree [y,n,q,a,d,/,e,?]?&lt;/code&gt;. I would suggest pressing &lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt;, which opens up your editor. There, it gives you these options:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  8 # To remove &#39;-&#39; lines, make them &#39; &#39; lines (context).  
  9 # To remove &#39;+&#39; lines, delete them.  
 10 # Lines starting with # will be removed.  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you would like a line to stay in your commit, replace the &lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; in front of it with a space. If you would like a line that was deleted to be removed, simply delete it (in vi, you can do this by typing &lt;code class=&quot;highlighter-rouge&quot;&gt;dd&lt;/code&gt; while on that line). This might take a bit of mental work to get used to, as removing a line while checking out a previous commit is the same as effectively keeping the line in the current commit. If you ever have any difficulty, you can restart the process by doing &lt;code class=&quot;highlighter-rouge&quot;&gt;git reset --hard&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once you have removed the lines which you wanted to - say, for instance, lines which where you had accidentally changed a word - add the new changes to the staging area by typing &lt;code class=&quot;highlighter-rouge&quot;&gt;git add -A&lt;/code&gt;. Then, commit them using the amend function we mentioned prior, and finally, force push them. It might be smart to look at the commit diff from the previous commit before force pushing: do this by diffing the two commits with &lt;code class=&quot;highlighter-rouge&quot;&gt;git diff HEAD~1..&lt;/code&gt;. Then:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ git add -A  
 $ git commit --amend  
 $ git push -f origin HEAD  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you don’t want the commit command to open up the editor because you’re not changing anything, you can also use &lt;code class=&quot;highlighter-rouge&quot;&gt;git commit --amend --no-edit&lt;/code&gt;, but that’s a bit more dangerous.&lt;/p&gt;

&lt;h3 id=&quot;option-5-interactively-rebase&quot;&gt;Option 5: Interactively Rebase&lt;/h3&gt;

&lt;p&gt;Another option is to interactively rebase. Normally, you’ll want to do this if the branch you forked off of has changed, and you’re being asked to update your commit, especially if there are changes. Rebasing is a bit more complicated, and I think you’d appreciate graphs for this, so take a look at &lt;a href=&quot;https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase-i&quot;&gt;this short post&lt;/a&gt; on it. A good way to think of rebasing is as a merge and a squash, rolled into one, while also using the hunk methods we saw in &lt;code class=&quot;highlighter-rouge&quot;&gt;git checkout -p&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you have conflicts, this might get a bit hairy. That’s OK though! Everything will eventually be alright. I’m not going to go into how to do this here, because I think the post above does it very clearly. Feel free to message me if you would like me to fill this out.&lt;/p&gt;

&lt;h3 id=&quot;option-6-open-a-new-pr&quot;&gt;Option 6: Open a new PR&lt;/h3&gt;

&lt;p&gt;This is frowned upon by most maintainers, because it creates more work for the maintainer, and quickly leads to a lot of random PRs being opened for what might have been a very simple problem. This is also work for you. You need to delete your old branch, close the PR, edit your commit manually in whatever way you see fit, and then push to a new branch, and reopen the PR. That’s a lot of effort.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;This should be your last resort&lt;/strong&gt; - only do this if the maintainer of the repository says it is OK. An example of where this might happen is if the PR has moved away significantly from the original solution it provided.&lt;/p&gt;

&lt;h3 id=&quot;option-7-wait-for-someone-else-to-help&quot;&gt;Option 7: Wait for someone else to help&lt;/h3&gt;

&lt;p&gt;Of course, for some fixes, maintainers can help you, too. This often happens when a maintainer wants to close a PR, but there’s a small thing that needs to be changed, and the original filer of the PR has moved to Ethiopia. What a maintainer can do in these situations is this: they checkout your branch, and pull down your changes onto your local machine. Then, they manually edit the file, and edit your commit message, amending it, before merging it into their up-to-date main branch and pushing. This will make the PR look like it has a conflict, but your code and your attribution will still be in the git history for that repository. Sometimes, people do this and then let you know in the PR comment thread by saying &lt;code class=&quot;highlighter-rouge&quot;&gt;Landed in &amp;lt;commit_sha&amp;gt;&lt;/code&gt;, where the commit_sha is the merge.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git checkout -b your-username-master master  
$ git pull https://github.com/your-username/repo.git master  
$ echo &#39;This PR needs this line&#39; &amp;gt;&amp;gt; your_file.md  
$ git commit --amend --no-edit  
$ git checkout master  
$ git merge your-username-master  
$ git push origin master  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Another thing maintainers can do is to actually add content in a new commit, and then make it look like you made it. They can do this by using this command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git commit --amend --author \&quot;Your Name &amp;lt;your_email@email_provider.com&amp;gt;\&quot;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Don’t worry - it’ll say on GitHub and in the commit, when they push, that they pushed a commit that you made, so in a sense, you are dual attributors.&lt;/p&gt;

&lt;p&gt;If you got this far, though, it’s likely they didn’t need to do that, and that you were able to fix your PR yourself. I hope so!&lt;/p&gt;

&lt;p&gt;Let me know if any of this is confusing. I’m happy to edit it and make things more clear, or to fix the inevitable errors I made describing this process.&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Oct 2015 00:00:00 +0000</pubDate>
        <link>/2015-10-30/how-to-amend-a-commit-on-a-github-pull-request</link>
        <guid isPermaLink="true">/2015-10-30/how-to-amend-a-commit-on-a-github-pull-request</guid>
        
        <category>git</category>
        
        <category>code</category>
        
        <category>force push</category>
        
        
        <category>code</category>
        
      </item>
    
      <item>
        <title>How to create a literary press</title>
        <description>
&lt;p&gt;I just published an article on Medium, &lt;a href=&quot;https://medium.com/@richlitt/how-to-start-a-literary-press-2ecdf0c92b6b&quot;&gt;How To Start A Literary Press&lt;/a&gt;, about my experience setting up &lt;a href=&quot;http://wordhoardpress.com&quot;&gt;Word Hoard Press&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I like Medium’s formatting better than this, my own blog, so go read it there.&lt;/p&gt;

&lt;p&gt;Follow &lt;a href=&quot;http://twitter.com/wordhoardpress&quot;&gt;@WordHoardPress&lt;/a&gt;, too!&lt;/p&gt;
</description>
        <pubDate>Thu, 15 Oct 2015 00:00:00 +0100</pubDate>
        <link>/2015-10-15/how-to-create-a-literary-press</link>
        <guid isPermaLink="true">/2015-10-15/how-to-create-a-literary-press</guid>
        
        <category>projects</category>
        
        <category>poetry</category>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>On not doing a project</title>
        <description>
&lt;p&gt;I’ve been thinking about building a site for coworking for many years. I’m not alone in this; there are many communities and websites building sites for digital nomads and itinerant workers in various cities, such as &lt;a href=&quot;https://workfrom.co/&quot;&gt;Work From&lt;/a&gt; or &lt;a href=&quot;http://digitalnomadslife.com/&quot;&gt;Digital Nomads Life&lt;/a&gt;. More recently, after having visited half a dozen coworking spaces in South East Asia, I’ve been considering building a site for coworking spaces in particular: not for cafes, or restaurants, or libraries that are good for working in, but for coworking spaces.&lt;/p&gt;

&lt;p&gt;Coworking spaces offer more than cafes. They often have more reliable internet, better facilities, and most importantly, they have other people you can interact with. I’m not just talking about mixers after work; just talking around the coffee pot on a break can be a useful experience, especially for solo nomads who need more interaction with their peers than they get in their work, especially if you &lt;a href=&quot;http://hoppycow.com/2014/12/13/working-remotely-for-extroverts/&quot;&gt;are an extrovert&lt;/a&gt;. A site dedicated towards finding the best and most productive places could potentially be a useful list for people not sure of where to go.&lt;/p&gt;

&lt;p&gt;The issue, and the reason I am going to not make this project, is that there isn’t enough value in such a list. People normally don’t choose their locations based on the coworking spots (although I do, but I suspect I’m alone in that). They choose based on where they want to go. Once they are there, they scope out the best places to work. Trying to direct people towards certain coworking spots goes against this grain.&lt;/p&gt;

&lt;p&gt;The other problem is that people don’t tend to google to find good spaces. They use Yelp, or Trip Advisor, or they go on NomadList or Hashtag Nomads and search there. They ask their friends and nomads who have been around longer. This is easier, more effective, and provides more relevant feedback for any given parameter. I don’t see how a website would make this any easier.&lt;/p&gt;

&lt;p&gt;Some pain points aren’t actually pain points. I constantly think that this might be one for me - it isn’t. I would like to know where the best coworking spots are in the world, but I’m not desperate about it and I’m not concerned about being able to find them. The pain is just a momentary wish that I knew more than I do, which is easily fixed by five minutes of googling. Finally, curating a website of coworking spots doesn’t really interest me. I’d like to go to those places, but taking photos, getting reviews, testing the internet; I’m not sure if I have the time or interest to do all of these things.&lt;/p&gt;

&lt;p&gt;Why am I writing this? Well, one of the hallmarks of success is being able to choose projects wisely. This means rejecting projects that are suboptimal. I’ve thought about this one for a long time, dedicating many hours to it, and the above is my rationale for saying no. So this is my goodbye to that project.&lt;/p&gt;

&lt;p&gt;See you at the coworking space, where I’ll be working on something else.&lt;/p&gt;

</description>
        <pubDate>Sun, 31 May 2015 00:00:00 +0100</pubDate>
        <link>/2015-05-31/on-not-doing-a-project</link>
        <guid isPermaLink="true">/2015-05-31/on-not-doing-a-project</guid>
        
        <category>projects</category>
        
        <category>writing</category>
        
        
        <category>journal</category>
        
      </item>
    
      <item>
        <title>Hosting NodeSchool in Bali and Chiang Mai</title>
        <description>
&lt;p&gt;Recently, I co-organized the first NodeSchool event in Bali, and organized the first event in Chiang Mai. Here’s a write up of how they went.&lt;/p&gt;

&lt;h3 id=&quot;what-is-nodeschool&quot;&gt;What is NodeSchool?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://nodeschool.io/&quot;&gt;NodeSchool&lt;/a&gt; is an open source community who build tutorials to help people learn how to use Node.js and javascript. NodeSchool chapters are groups of people in various cities who throw events where local coders come together to do the tutorials at once. It’s like a conference, but no one is talking, people are actually coding, and there’s a lot less pressure to be a good coder and much more pressure to hang out and have fun learning something new.&lt;/p&gt;

&lt;p&gt;I helped organize a NodeSchool in San Francisco in March, and mentored a workshop that was basically a one-off NodeSchool event as part of NodeSummit there. When I left San Francisco to go travel around South East Asia for a while, I figured I’d see if anyone was up for throwing some more NodeSchools where I was.&lt;/p&gt;

&lt;h3 id=&quot;bali&quot;&gt;Bali&lt;/h3&gt;

&lt;p&gt;I looked at the &lt;a href=&quot;http://nodeschool.io/chapters.html&quot;&gt;NodeSchool chapters&lt;/a&gt;, and no one had ever thrown any events in Bali before. In Bali, a website had been started by a guy called Eric, but there weren’t any specific plans or date. I messaged him on the GitHub repository for Bali, and we decided to have one.&lt;/p&gt;

</description>
        <pubDate>Sun, 03 May 2015 00:00:00 +0100</pubDate>
        <link>/2015-05-03/hosting-nodeschool-in-bali-and-chiang-mai</link>
        <guid isPermaLink="true">/2015-05-03/hosting-nodeschool-in-bali-and-chiang-mai</guid>
        
        
      </item>
    
      <item>
        <title>100 Days of Code</title>
        <description>
&lt;p&gt;I’ve published an article on my 100 days of coding streak.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@richlitt/100-days-of-code-5e9a4dc6d56b&quot;&gt;Article on Medium&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 30 Apr 2015 00:00:00 +0100</pubDate>
        <link>/2015-04-30/100-days-of-code</link>
        <guid isPermaLink="true">/2015-04-30/100-days-of-code</guid>
        
        <category>coding</category>
        
        <category>journal</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Removing local npm modules from your development workflow</title>
        <description>
&lt;p&gt;While building &lt;a href=&quot;https://github.com/BeagleLab/beagle&quot;&gt;beagle&lt;/a&gt;, I’ve tried to modularize as much as possible. Beagle is a Chrome extension, using browserify and React, that injects a sidebar into any page or PDF on the web. We also rerender PDFs using &lt;a href=&quot;https://mozilla.github.io/pdf.js/&quot;&gt;PDF.js&lt;/a&gt;, and add in the sidebar to the native PDF.js viewer. Beagle is an annotation tool; one of the goals of the product is to be able to eventually build a web portal for anyone to see annotations without having downloaded the Chrome extension, which would mean loading PDFs on our own website. Because of this, I knew fairly early on that some of the styles would be specific to the Chrome extension, and some specific to the website. So, I decided to make a &lt;code class=&quot;highlighter-rouge&quot;&gt;beagle-style&lt;/code&gt; module, to factor out the styles for the extension. I also factored out the code that deals with the PDFjs api into a module, &lt;code class=&quot;highlighter-rouge&quot;&gt;beagle-pdf&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This was a smart move at the time, but it has become increasingly clear that there must be a better way. What this did was require every developer working on the platform to symlink two other git repositories into their &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; folder. I made a shell script to help do this:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/RichardLitt/d668e99f9566dcf386fb.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Sure, this is one way to do it. But this means requiring every developer to run this symlink, which is a major barrier to installaton and debugging for people who aren’t interested in the entire app, but just want to test it. Further, this goes against the idea of modularity. If I have to have two connected modules, at all times, and they can’t be unplugged - than why am I making two modules at all?&lt;/p&gt;

&lt;p&gt;The first inkling that I could change this came when I considered &lt;code class=&quot;highlighter-rouge&quot;&gt;beagle-pdf&lt;/code&gt;. That module is basically a wrapper around PDF.js, so that I have specific methods I can call that do things with the PDF.js api such as highlight text. At the moment, that module is stable, and works pretty well independantly of the Beagle core. As this is the case, there’s no reason to not publish it and remove the dev environment. If I want to change it live, I can edit the module installed in &lt;code class=&quot;highlighter-rouge&quot;&gt;node_modules&lt;/code&gt; directly, and copy those changes over to another repository, commit, push, and publish them. That’s one removed.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;beagle-style&lt;/code&gt; is a bit more complex - these styles are hypothetically modular so that the sidebar can be separated from the future web instance. But I’m using React - which means that each component can actually have it’s own styles injected in the React component itself, without having to use an external CSS file. This makes my life a lot easier, too, as I don’t need to require and inject entire CSS files. Further, the web instance shouldn’t look different than the Sidebar, and if it is different, the CSS should reflect that directly where it happens - in the component.&lt;/p&gt;

&lt;p&gt;So, we can take that out too. For now, I’ve published the &lt;code class=&quot;highlighter-rouge&quot;&gt;beagle-style&lt;/code&gt; module, but I expect to complete remove it of all of its CSS at some point soon as I work the CSS into the React components. What this means is that now users can clone my repository and just run &lt;code class=&quot;highlighter-rouge&quot;&gt;npm install&lt;/code&gt; and everything works. This is a much easier workflow.&lt;/p&gt;

&lt;p&gt;And now that that barrier is lowered, hopefully it will be easier for other devs to work on the project. When in doubt, refactor, minimize, and remove barriers to entry.&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Apr 2015 00:00:00 +0100</pubDate>
        <link>/2015-04-26/removing-local-modules-from-your-dev-workflow</link>
        <guid isPermaLink="true">/2015-04-26/removing-local-modules-from-your-dev-workflow</guid>
        
        <category>coding</category>
        
        <category>beagle</category>
        
        
        <category>coding</category>
        
      </item>
    
      <item>
        <title>Build smaller, help more</title>
        <description>
&lt;p&gt;&lt;em&gt;This post was also published &lt;a href=&quot;https://medium.com/@richlitt/build-smaller-help-more-7101d9933b4f&quot;&gt;on Medium&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Before I left San Francisco, I saw some graffiti in the Mission which said ‘There are no local tech workers.’ As a web developer, I resonated with that; I often feel disconnected from my community, as I build things for a global audience. I’m also a digital nomad. I haven’t lived anywhere longer than a year for the past decade. It’s hard to feel connected when I don’t have a home to go back to.&lt;/p&gt;

&lt;p&gt;Last week, while traveling in Bali, I realized being disconnected is a conscious choice, and I can change it. I didn’t realize this in the middle of a massage, or from a wise old man, or from acting out &lt;em&gt;Eat Pray Love&lt;/em&gt;. The epiphany occurred in my ride to the airport, with my taxi driver, Nyoman.&lt;/p&gt;

&lt;h4 id=&quot;does-it-scale&quot;&gt;Does it scale?&lt;/h4&gt;

&lt;p&gt;Before I go deeper, I’d like to give you some more background. My friends and I have a problem: we like thinking of ideas for projects. We build up entire business plans over lunch that would require all of us to quit our jobs and spend a year or more working on them if we were honest about making them work. We’re constantly evaluating the annual revenue for local businesses based on the amount of customers we can count in a few minutes. We think of a dozen different ideas that could lead to viable streams of income, and discard the majority of them for not being long term.&lt;/p&gt;

&lt;p&gt;There’s a few questions we ask ourselves: What’s the market value? How much could you offload onto a virtual assistant? What are the competitors?&lt;/p&gt;

&lt;p&gt;Does it scale?&lt;/p&gt;

&lt;p&gt;These questions make a lot of sense, if you’re in the San Francisco tech scene. As I’ve been finding out, their relevance is less clear elsewhere.&lt;/p&gt;

&lt;h4 id=&quot;there-are-no-local-tech-workers&quot;&gt;There are no local tech workers&lt;/h4&gt;

&lt;p&gt;I recently left San Francisco for the greener rice pastures of South East Asia. I’d never been before, and my work allows me to be wherever I want as long as there is an internet connection. Technically my client is in Massachusetts, but I was living in California before I realized I didn’t need to pay that much rent. So I moved.&lt;/p&gt;

&lt;p&gt;I’m not alone in being able to do this. The internet is distributed, and web developers generally work on projects which are location independent. This separates us from our communities; from the people we buy groceries from, from our youth groups, in some cases, like mine, from our friends, who live all over the world because they go where the jobs are. My community isn’t grounded anywhere, except maybe in a Slack channel.&lt;/p&gt;

&lt;p&gt;After a few weeks in Bali, my first destination, I started wondering if the recent rise in digital nomads and remote workers (and, to some extent, expats) is actually a symptom of an unhealthy society. Here I was, with tech money, coming and staying for a month at a hotel for almost nothing, eating out every meal. I learned a few words in Bahasa, but my only real interaction was people in the service industry - with the people at the laundromat, the cafe, and the co-working space. With my taxi drivers.&lt;/p&gt;

&lt;h4 id=&quot;nyoman-ardika&quot;&gt;Nyoman Ardika&lt;/h4&gt;

&lt;p&gt;I was thinking about these themes one morning especially. I was heading to the airport for a weekend trip to Hong Kong to see an old friend and business partner of mine. The hotel arranged a taxi for me, and I sat in the front and started talking to the driver. That’s not uncommon here; it’s more normal to sit and chat to your driver than to sit in the back in silence. This is how I met Nyoman. After asking for basic phrases in the local language and just chatting, I asked him how long he had been driving, and he told me a bit about his life.&lt;/p&gt;

&lt;p&gt;Nyoman is Balinese, and had been driving a taxi for around twenty years. Sixteen of those he had been an employee, getting paid less because he didn’t have his own car - generally, drivers get around 15-25% of the money they earn, while the rest goes to the company who provide their cars. Nyoman had saved up for years to buy his van, but he only owned half of it, and still had four years left on his payment plan. He worked every day.&lt;/p&gt;

&lt;p&gt;“I must be hard,” he said. His son was in college learning to be an artist (craftsmen make good money in Bali), and his daughter would probably go to college soon. His wife and he played instruments and danced some nights with their friends, which he enjoyed. But driving past marshes, I mentioned that I heard there used to be good crab fishing there before the sewage plant was put in. I asked if he ever fished. “I don’t have the time. I must work every day. Even when I do not have a ride, I must wait.”&lt;/p&gt;

&lt;p&gt;I asked him if he had a website. “No. I have a phone, and my son can use the internet, but I don’t have a website. I don’t know how to use it.” I asked if he had an email. “Yes, Yahoo.” I asked if he thought about using any apps, like Trip Advisor, or offering repeat rides or so on. He became silent for a bit.&lt;/p&gt;

&lt;p&gt;“I think about how to make more money and change my business all day. I don’t know how. I don’t know what to do.”&lt;/p&gt;

&lt;p&gt;I stared at the ocean to our left for a few seconds.&lt;/p&gt;

&lt;p&gt;“I could make you a website.”&lt;/p&gt;

&lt;h4 id=&quot;build-more-small-things&quot;&gt;Build More Small Things&lt;/h4&gt;

&lt;p&gt;So I did: &lt;a href=&quot;http://inyoman.com&quot;&gt;inyoman.com&lt;/a&gt;. I don’t know if a website will help him out. Building websites is what I do - it’s an easy way for me to help without having to spend weeks of my time doing research on how to game the taxi industry. And what I do know is that since making it, I have been able to share it with twenty or thirty friends of mine in Bali, and he has gotten more rides because of it. I know that he will probably get one or two rides more from it, and that, if it is linked enough, he may actually rise in the rankings on Google and may be able to build a bigger business.&lt;/p&gt;

&lt;p&gt;The thing is, the website I made took the equivalent of an afternoon. There’s no tangible benefit for me in making it. It is for one guy,. It won’t scale. I’m not even unique: a friend of mine &lt;a href=&quot;http://juliasaiwayan.com&quot;&gt;made one&lt;/a&gt; for his taxi driver, a year before I did. Another American I know who has lived here for twenty years suggested that I build out a platform for taxi drivers to all build their own websites. But I’m not interested in a service like that - I think that the problems I’m working on are more economically viable for me in the long run, and more interesting from a developmental perspective.&lt;/p&gt;

&lt;p&gt;But for Nyoman, it may have gathered him an extra month’s pay. He works every day, but only gets around 18 rides a month. He showed me his ledger. He doesn’t earn much. A few extra rides may make a huge difference.&lt;/p&gt;

&lt;p&gt;Not every project needs to be built into a business plan. Not every product needs to be scalable. Not every product needs to be built for everyone anywhere in the world.&lt;/p&gt;

&lt;p&gt;And if I can make one man’s life a little easier by using one throwaway afternoon of mine, shouldn’t I do that?&lt;/p&gt;
</description>
        <pubDate>Tue, 14 Apr 2015 00:00:00 +0100</pubDate>
        <link>/2015-04-14/build-smaller-help-more</link>
        <guid isPermaLink="true">/2015-04-14/build-smaller-help-more</guid>
        
        <category>thoughts</category>
        
        <category>projects</category>
        
        <category>development</category>
        
        <category>websites</category>
        
        
        <category>projects</category>
        
      </item>
    
      <item>
        <title>On emotionally investing in a finite number of infinite possibilities</title>
        <description>
&lt;p&gt;There are an infinite amount of places this sentence can go. In closed systems, that space can be severely limited; to the point where a language comprised of one non-duplicatable value would only have a single possible state. Recently, I’ve been asking myself often what determines our intuition about bounded states that occur in, for lack of a better word, ‘real life’. I didn’t attend Philosophy 101 in college; I may not be using the right vocabulary throughout this, and I’d ask you to bear with me if that is the case.&lt;/p&gt;

&lt;p&gt;For instance, I am currently in a cafe. I could walk outside of the door and do an infinite amount of things. However, when asked what I am going to do later, the answers will be highly bounded - I am going to go eat, or go home, or maybe if I’m feeling particularly crazy I’ll go to another cafe. The odds that I will walk out of this cafe, throw my backpack into opposing traffic, and begin swimming towards Alcatraz while screaming about the giant platypus in the sky are very, very low (I hope). But that’s a possibility. We all know about this - it’s something that we’re taught early on, in the same breath as ‘creativity’ and ‘living outside of your comfort zone’.&lt;/p&gt;

&lt;p&gt;However, we don’t generally talk about other applications of questioning the bounds of possible paths or areas within the decision space.&lt;/p&gt;

&lt;p&gt;My friend Simon tweeted recently that he didn’t know “how I feel about these 2k person slacks that are starting to crop up.” I responded, casually - do you have to feel a certain way about them?&lt;/p&gt;

&lt;p&gt;I know intuitively what Simon meant - he was airing that he may have some unfinished thoughts surrounding a relatively new phenomenon online, and what it portends for the future of the internet (and for our jobs and lives, as online-living and -working people). I was trying to respond to his feeling about it - though. Why would he feel anything about the phenomenon, at all? This swiftly got interesting when he responded:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Simon: I’m not apathetic about most things I’m involved with?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Me: Sure you are. You’re being really selective of the fields of interaction you’re choosing to notice.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Think about it. In the multiverse (a word I really don’t like but am going to use anyway), there are an infinite amount of things one chooses to take notice of. This doesn’t necessarily have to be about the multiverse - in the universe, there are an infinite amount of ways I could carve up reality into segments that involve interaction with me (there are probably a finite amount of segments that I would find semantically different, though). I could choose to interact with my coke bottle next to me at this cafe, or with the label, or with the Cousteau-like nautical light in the corner. Until I looked at the lamp just now, I had no preconceived statements I could make about my value judgements of it. But now I do. And I could repeat this process, infinitely.&lt;/p&gt;

&lt;p&gt;Choosing which objects to conceivably identify as worthy of emotional weight is a thing I can do. And it’s a thing you can do. It’s a way of dealing with limitless possibilities, and it is, in a sense, controllable.&lt;/p&gt;

&lt;p&gt;That may be what I was trying to say. I didn’t communicate the above thoughts as clearly as I could have. This may be, even, where I wanted this post to end up. I won’t know until I consider alternatives, and I am going to choose a path that involves me not following this line of thought presently. You don’t have to stop - the comment section is right beneath this final sentence.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Mar 2015 00:00:00 +0000</pubDate>
        <link>/2015-03-05/on-emotionally-investing-in-a-finite-number-of-infinite-possibilities</link>
        <guid isPermaLink="true">/2015-03-05/on-emotionally-investing-in-a-finite-number-of-infinite-possibilities</guid>
        
        <category>thoughts</category>
        
        
        <category>thoughts</category>
        
      </item>
    
  </channel>
</rss>
